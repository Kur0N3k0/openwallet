<html>
    <head>
        <title><%= user.nick %>'s Wallet</title>
        <link rel="preconnect" href="https://fonts.gstatic.com">
        <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@500&family=Ubuntu:wght@500&display=swap" rel="stylesheet">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">
        <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.1.3/socket.io.js" integrity="sha512-2RDFHqfLZW8IhPRvQYmK9bTLfj/hddxGXQAred2wNZGkrKQkLGj8RCkXfRJPHlDerdHHIzTFaahq4s/P4V6Qig==" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js" integrity="sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/1.4.0/clipboard.min.js" integrity="sha512-iJh0F10blr9SC3d0Ow1ZKHi9kt12NYa+ISlmCdlCdNZzFwjH1JppRTeAnypvUez01HroZhAmP4ro4AvZ/rG0UQ==" crossorigin="anonymous"></script>
    </head>
    <style>
        body {
            background-color: #313235;
            color: white;
            font-family: 'Raleway', sans-serif;
            font-family: 'Ubuntu', sans-serif;
        }
        .currency {
            font-size: 40px;
        }

        #snackbar {
            visibility: hidden;
            min-width: auto0px;
            margin-left: -1autopx;
            background-color: #313235;
            color: #fff;
            text-align: center;
            border-radius: 2px;
            padding: 16px;
            position: fixed;
            z-index: 1;
            left: 50%;
            bottom: 30px;
        }

        #snackbar.show {
            visibility: visible;
            
            -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
            animation: fadein 0.5s, fadeout 0.5s 2.5s;
        }


        @-webkit-keyframes fadein {
            from {bottom: 0; opacity: 0;}
            to {bottom: 30px; opacity: 1;}
        }

        @keyframes fadein {
            from {bottom: 0; opacity: 0;}
            to {bottom: 30px; opacity: 1;}
        }

        @-webkit-keyframes fadeout {
            from {bottom: 30px; opacity: 1;}
            to {bottom: 0; opacity: 0;}
        }

        @keyframes fadeout {
            from {bottom: 30px; opacity: 1;}
            to {bottom: 0; opacity: 0;}
        }

        .footer {
            position: fixed;
            left: 0;
            bottom: 0;
            width: 100%;
            background-color: #28292d;
            color: white;
            text-align: center;
        }

        .footer > .footer-item {
            display: inline-block;
            padding: 10px;
        }

        .footer > .footer-item:hover {
            background-color: #222;
        }

        .footer > .footer-item > a {
            text-decoration: none;
            padding: 10px;
            color: white;
        }

        .red {
            color: #d60000;
        }
        .blue {
            color: #0051c7;
        }

        .rainbow {
            text-align: center;
            text-decoration: underline;
            /* font-size: 32px; */
            /* font-family: monospace; */
            letter-spacing: 5px;
        }
        .rainbow_text_animated {
            background: linear-gradient(to right, #6666ff, #0099ff , #00ff00, #ff3399, #6666ff);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            animation: rainbow_animation 0.5s ease-in-out infinite;
            background-size: 400% 100%;
        }

        @keyframes rainbow_animation {
            0%,100% {
                background-position: 0 0;
            }

            50% {
                background-position: 100% 0;
            }
        }

    </style>
    <body>
        <div class="container h-100">
            <div class="row h-100 justify-content-center align-items-center">
                <div class="col w-25 currency_table">
                    <div class="row text-center">
                        <h2><%= user.nick %></h2>
                    </div>
                </div>
            </div>
            <div id="snackbar"></div>
            <div class="footer">
                <div class="footer-item">
                    <a href="#" class="share" data-clipboard-text="http://coin.ltra.cc/user/<%= user.nick %>">공유하기</a>
                </div>
            </div>
        </div>
    </body>
    <script>
        $(() => {
            var clipboard = new Clipboard('.share')
            clipboard.on('success', (e) => {
                Snackbar("복사 완료")
                console.log(e)
            })
            clipboard.on('error', (e) => {
                Snackbar("복사 실패")
                console.log(e);
            })

            function Snackbar(msg) {
                var x = document.getElementById("snackbar");
                x.className = "show";
                x.textContent = msg;
                setTimeout(function () { x.className = x.className.replace("show", ""); }, 3000);
            }

            var wallet = {}

            function uuidv4() {
                return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>
                    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
                )
            }

            const upbit = new WebSocket("wss://api.upbit.com/websocket/v1")

            const socket = io()
            socket.on('wallet', (cwallet) => {
                wallet = {}
                cwallet = cwallet.filter(item => item.currency != "KRW")
                // if(Math.floor(Math.random() * 2) % 2)
                    // cwallet = cwallet.filter(item => item.currency != "DOGE")
                cwallet.forEach((item) => {
                    wallet[item.currency] = {
                        avg_buy_price: item.avg_buy_price,
                        balance: parseFloat(item.balance) + parseFloat(item.locked),
                    }
                })
                // socket.emit('quotation', Object.keys(wallet))
                upbit.send(JSON.stringify([
                    { "ticket": uuidv4() },
                    {
                        "type": "ticker",
                        "codes": Object.keys(wallet).map((item) => "KRW-" + item),
                        "isOnlySnapshot":true
                    }
                ]))

                $("div[class*=currency-]").map((_, item) => {
                    flag = false
                    Object.keys(wallet).map((key) => {
                        if($(item).hasClass(`currency-${key}`)) {
                            flag = true
                        }
                    })
                    if(!flag)
                        $(item).remove()
                })
            })

            upbit.onmessage = (evt) => {
                const reader = new FileReader()
                reader.onload = () => {
                    const tick = JSON.parse(reader.result)
                    var code = tick.code.substr(4)
                    var price = tick.trade_price

                    if(wallet[code] === undefined)
                        return

                    var startPrice = wallet[code].avg_buy_price * wallet[code].balance
                    var afterPrice = price * wallet[code].balance

                    var profit = Math.round(afterPrice - startPrice)
                    var percentage = afterPrice > startPrice ? (afterPrice / startPrice) * 100 - 100 : -(1 - afterPrice / startPrice) * 100
                    percentage = percentage.toFixed(2)

                    if(percentage > 0) {
                        color = "red"
                    } else {
                        color = "blue"
                    }

                    if($(`.currency-${code}`).length !== 0) {
                        $(`.currency-${code}`).html(`
                        <div class="row">
                            <div class="col w-25 text-end">
                                <span class="code">${code}</span>
                            </div>
                            <div class="col w-25 text-end">
                                <span class="profit">${profit}</span>
                            </div>
                            <div class="col w-25 text-start">
                                <span class="${color}">(${percentage}%)</span>
                            </div>
                        </div>
                        `)
                    } else {
                        if($(".donation").length !== 0) {
                            $(".donation").remove()
                        }

                        $(".currency_table").append(`
                        <div class="row currency currency-${code}">
                            <div class="row">
                                <div class="col w-25 text-end">
                                    <span class="code">${code}</span>
                                </div>
                                <div class="col w-25 text-end">
                                    <span class="profit">${profit}</span>
                                </div>
                                <div class="col w-25 text-start">
                                    <span class="${color}">(${percentage}%)</span>
                                </div>
                            </div>
                        </div>
                        `)

                        // $(".currency_table").append(`
                        // <div class="row donation align-items-center">
                        //     <div class="col w-25 text-end">
                        //         <h3>Donation</h3>
                        //     </div>
                        //     <div class="col w-25">
                        //         <div class="text-end">
                        //             <img src="/static/images/BTC.svg" width="32" height="32"> 39Fsbw3dXUbuXyQXdc6oM7z5SvvAkkRcwf
                        //         </div>
                        //         <div class="text-end">
                        //             <img src="/static/images/MBL.png" widht="32" height="32"> ANXZTXH7rV94rAC3yYmNs6zYeFzTHaKsFT
                        //         </div>
                        //     </div>
                        //     <div class="col w-25">
                        //     </div>
                        // </div>
                        // `)
                        $(".currency_table").append(`
                        <div class="row donation" style="padding-top:50px;">
                            <div class="text-center">
                                <h3>Donation</h3>
                            </div>
                            <div class="text-center">
                                <img src="/static/images/BTC.svg" width="32" height="32"> 39Fsbw3dXUbuXyQXdc6oM7z5SvvAkkRcwf
                            </div>
                            <div class="text-center">
                                <img src="/static/images/MBL.png" widht="32" height="32"> ANXZTXH7rV94rAC3yYmNs6zYeFzTHaKsFT
                            </div>
                        </div>
                        `)
                    }
                }
                reader.readAsText(evt.data)
            // socket.on('message', (tick) => {
            }

            socket.on('error', () => {
                alert("올바른 Access/Secret key를 입력해주세요.")
                location = "/"
            })
            
            setInterval(() => {
                socket.emit('wallet', {
                    nick:"<%= user.nick %>"
                })
            }, 1000)
        })
    </script>
</html>